# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class NotificationItemModel(Model):
    """A NotificationItem represents a single event notification for given
    Notification session belonging to a Subscription.

    :param subscription_id: The Subscription that this NotificationItem is
     for.
    :type subscription_id: str
    :param notification_id: The Notification that this NotificationItem is
     for.
    :type notification_id: str
    :param change_type: The type of change this is a NotificationItem for.
     Possible values include: 'ValueItemChanged', 'AlarmEventChanged',
     'SystemEventChanged', 'HierarchyChanged'
    :type change_type: str or ~ewsrestgatewayswagger.models.enum
    :param changed_item_id: Id of the item that changed.
    :type changed_item_id: str
    :param changed_item_type: The type of entity which ChangedItemId refers
     to. Possible values include: 'ContainerItem', 'ValueItem', 'HistoryItem',
     'AlarmItem', 'EnumItem'
    :type changed_item_type: str or ~ewsrestgatewayswagger.models.enum
    :param changed_at: The DateTime in UTC when the change occurred.  Not
     available for all ChangeType.
    :type changed_at: datetime
    :param value: The Value at the time of the change.  (ChangeType =
     ValueItemChanged only).
    :type value: str
    :param value_state: The State at the time of the change.  (ChangeType =
     ValueItemChanged only). Possible values include: 'Good', 'Uncertain',
     'Forced', 'Offline', 'Error'
    :type value_state: str or ~ewsrestgatewayswagger.models.enum
    :param alarm_event_state: The Alarm State at the time of the change.
     (ChangeType = AlarmEventChanged only). Possible values include: 'Normal',
     'Active', 'Acknowledged', 'Reset', 'Disabled'
    :type alarm_event_state: str or ~ewsrestgatewayswagger.models.enum
    :param id: Case sensitive identifier for the entity.
    :type id: str
    """

    _attribute_map = {
        'subscription_id': {'key': 'SubscriptionId', 'type': 'str'},
        'notification_id': {'key': 'NotificationId', 'type': 'str'},
        'change_type': {'key': 'ChangeType', 'type': 'str'},
        'changed_item_id': {'key': 'ChangedItemId', 'type': 'str'},
        'changed_item_type': {'key': 'ChangedItemType', 'type': 'str'},
        'changed_at': {'key': 'ChangedAt', 'type': 'iso-8601'},
        'value': {'key': 'Value', 'type': 'str'},
        'value_state': {'key': 'ValueState', 'type': 'str'},
        'alarm_event_state': {'key': 'AlarmEventState', 'type': 'str'},
        'id': {'key': 'Id', 'type': 'str'},
    }

    def __init__(self, *, subscription_id: str=None, notification_id: str=None, change_type=None, changed_item_id: str=None, changed_item_type=None, changed_at=None, value: str=None, value_state=None, alarm_event_state=None, id: str=None, **kwargs) -> None:
        super(NotificationItemModel, self).__init__(**kwargs)
        self.subscription_id = subscription_id
        self.notification_id = notification_id
        self.change_type = change_type
        self.changed_item_id = changed_item_id
        self.changed_item_type = changed_item_type
        self.changed_at = changed_at
        self.value = value
        self.value_state = value_state
        self.alarm_event_state = alarm_event_state
        self.id = id
