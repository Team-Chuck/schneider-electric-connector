# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.service_client import SDKClient
from msrest import Configuration, Serializer, Deserializer
from .version import VERSION
from msrest.exceptions import HttpOperationError
from .operations.alarm_events_operations import AlarmEventsOperations
from .operations.alarm_event_types_operations import AlarmEventTypesOperations
from .operations.alarms_operations import AlarmsOperations
from .operations.containers_operations import ContainersOperations
from .operations.notifications_operations import NotificationsOperations
from .operations.root_operations import RootOperations
from .operations.subscriptions_operations import SubscriptionsOperations
from .operations.system_events_operations import SystemEventsOperations
from .operations.system_event_types_operations import SystemEventTypesOperations
from .operations.token_operations import TokenOperations
from .operations.trends_operations import TrendsOperations
from .operations.trend_samples_operations import TrendSamplesOperations
from .operations.values_operations import ValuesOperations
from . import models


class EBOConfiguration(Configuration):
    """Configuration for EBO
    Note that all parameters used to create this instance are saved as instance
    attributes.

    :param str base_url: Service URL
    """

    def __init__(
            self, base_url=None):

        if not base_url:
            base_url = 'http://159.215.64.146'

        super(EBOConfiguration, self).__init__(base_url)

        self.add_user_agent('se-ews-rest-gateway-client/{}'.format(VERSION))


class EBO(SDKClient):
    """EBO

    :ivar config: Configuration for client.
    :vartype config: EBOConfiguration

    :ivar alarm_events: AlarmEvents operations
    :vartype alarm_events: ewsrestgatewayswagger.operations.AlarmEventsOperations
    :ivar alarm_event_types: AlarmEventTypes operations
    :vartype alarm_event_types: ewsrestgatewayswagger.operations.AlarmEventTypesOperations
    :ivar alarms: Alarms operations
    :vartype alarms: ewsrestgatewayswagger.operations.AlarmsOperations
    :ivar containers: Containers operations
    :vartype containers: ewsrestgatewayswagger.operations.ContainersOperations
    :ivar notifications: Notifications operations
    :vartype notifications: ewsrestgatewayswagger.operations.NotificationsOperations
    :ivar root: Root operations
    :vartype root: ewsrestgatewayswagger.operations.RootOperations
    :ivar subscriptions: Subscriptions operations
    :vartype subscriptions: ewsrestgatewayswagger.operations.SubscriptionsOperations
    :ivar system_events: SystemEvents operations
    :vartype system_events: ewsrestgatewayswagger.operations.SystemEventsOperations
    :ivar system_event_types: SystemEventTypes operations
    :vartype system_event_types: ewsrestgatewayswagger.operations.SystemEventTypesOperations
    :ivar trends: Trends operations
    :vartype trends: ewsrestgatewayswagger.operations.TrendsOperations
    :ivar trend_samples: TrendSamples operations
    :vartype trend_samples: ewsrestgatewayswagger.operations.TrendSamplesOperations
    :ivar values: Values operations
    :vartype values: ewsrestgatewayswagger.operations.ValuesOperations

    :param str base_url: Service URL
    """

    def __init__(
            self, base_url=None):

        self.config = EBOConfiguration(base_url)
        super(EBO, self).__init__(None, self.config)

        client_models = {k: v for k, v in models.__dict__.items() if isinstance(v, type)}
        self.api_version = 'v1'
        self._serialize = Serializer(client_models)
        self._deserialize = Deserializer(client_models)

        self.alarm_events = AlarmEventsOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.alarm_event_types = AlarmEventTypesOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.alarms = AlarmsOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.containers = ContainersOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.notifications = NotificationsOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.root = RootOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.subscriptions = SubscriptionsOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.system_events = SystemEventsOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.system_event_types = SystemEventTypesOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.token = TokenOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.trends = TrendsOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.trend_samples = TrendSamplesOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.values = ValuesOperations(
            self._client, self.config, self._serialize, self._deserialize)
