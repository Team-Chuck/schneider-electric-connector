# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class SystemEventModel(Model):
    """A SystemEvent represents the occurrence of a server specific event.

    :param type: Server specific type of the SystemEvent.
    :type type: str
    :param message: Human readable message for the SystemEvent.
    :type message: str
    :param occurred_on: DateTime when the SystemEvent was generated.
    :type occurred_on: datetime
    :param priority: Priority value of the SystemEvent.
    :type priority: int
    :param source_id: Id for a server specific "source" of the SystemEvent.
    :type source_id: str
    :param source_name: Name for the server specific "source" of the
     SystemEvent.
    :type source_name: str
    :param id: Case sensitive identifier for the entity.
    :type id: str
    """

    _attribute_map = {
        'type': {'key': 'Type', 'type': 'str'},
        'message': {'key': 'Message', 'type': 'str'},
        'occurred_on': {'key': 'OccurredOn', 'type': 'iso-8601'},
        'priority': {'key': 'Priority', 'type': 'int'},
        'source_id': {'key': 'SourceId', 'type': 'str'},
        'source_name': {'key': 'SourceName', 'type': 'str'},
        'id': {'key': 'Id', 'type': 'str'},
    }

    def __init__(self, *, type: str=None, message: str=None, occurred_on=None, priority: int=None, source_id: str=None, source_name: str=None, id: str=None, **kwargs) -> None:
        super(SystemEventModel, self).__init__(**kwargs)
        self.type = type
        self.message = message
        self.occurred_on = occurred_on
        self.priority = priority
        self.source_id = source_id
        self.source_name = source_name
        self.id = id
