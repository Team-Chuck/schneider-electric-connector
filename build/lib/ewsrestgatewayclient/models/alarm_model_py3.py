# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class AlarmModel(Model):
    """The existence of an Alarm does not imply that an alarm has occurred, only
    that alarm criteria exists.
    Typically, this is done for a specific Value but this is not required.  If
    alarm is associated with a Value, the Id of that Value should be included.

    :param state: Current state of the Alarm. Possible values include:
     'Normal', 'Active', 'Acknowledged', 'Reset', 'Disabled'
    :type state: str or ~ewsrestgatewayswagger.models.enum
    :param value_id: Optional Id of a Value this Alarm is associated with.
    :type value_id: str
    :param transition_model: The transition model for the Alarm. Possible
     values include: 'Unrestricted', 'SimpleSystemAlarm',
     'NoAcknowledgeRequired', 'SimpleTransientAlarm',
     'SingleAcknowledgeRequirement', 'ExtendedAcknowledgeRequirement'
    :type transition_model: str or ~ewsrestgatewayswagger.models.enum
    :param name: Name of the Alarm.
    :type name: str
    :param description: Optional description of the Alarm.
    :type description: str
    :param parent_id: Id of the Container which the Alarm is found in.
    :type parent_id: str
    :param id: Case sensitive identifier for the entity.
    :type id: str
    """

    _attribute_map = {
        'state': {'key': 'State', 'type': 'str'},
        'value_id': {'key': 'ValueId', 'type': 'str'},
        'transition_model': {'key': 'TransitionModel', 'type': 'str'},
        'name': {'key': 'Name', 'type': 'str'},
        'description': {'key': 'Description', 'type': 'str'},
        'parent_id': {'key': 'ParentId', 'type': 'str'},
        'id': {'key': 'Id', 'type': 'str'},
    }

    def __init__(self, *, state=None, value_id: str=None, transition_model=None, name: str=None, description: str=None, parent_id: str=None, id: str=None, **kwargs) -> None:
        super(AlarmModel, self).__init__(**kwargs)
        self.state = state
        self.value_id = value_id
        self.transition_model = transition_model
        self.name = name
        self.description = description
        self.parent_id = parent_id
        self.id = id
