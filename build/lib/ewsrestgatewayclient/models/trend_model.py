# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class TrendModel(Model):
    """A Trend references a specific Value for which historical value "trending"
    has been enabled.
    The existence of a Trend does not imply that history exists; only that
    history will be captured for a Value.

    :param type: Type of the associated Value. Possible values include:
     'DateTime', 'Boolean', 'String', 'Double', 'Long', 'Integer', 'Duration'
    :type type: str or ~ewsrestgatewayswagger.models.enum
    :param unit: Unit of the associated Value.
    :type unit: str
    :param value_id: Id of the Value for which trending data will be captured.
    :type value_id: str
    :param name: Name of the Trend.
    :type name: str
    :param description: Optional description of the Trend.
    :type description: str
    :param parent_id: Id of the Container which the Trend is found in.
    :type parent_id: str
    :param id: Case sensitive identifier for the entity.
    :type id: str
    """

    _attribute_map = {
        'type': {'key': 'Type', 'type': 'str'},
        'unit': {'key': 'Unit', 'type': 'str'},
        'value_id': {'key': 'ValueId', 'type': 'str'},
        'name': {'key': 'Name', 'type': 'str'},
        'description': {'key': 'Description', 'type': 'str'},
        'parent_id': {'key': 'ParentId', 'type': 'str'},
        'id': {'key': 'Id', 'type': 'str'},
    }

    def __init__(self, **kwargs):
        super(TrendModel, self).__init__(**kwargs)
        self.type = kwargs.get('type', None)
        self.unit = kwargs.get('unit', None)
        self.value_id = kwargs.get('value_id', None)
        self.name = kwargs.get('name', None)
        self.description = kwargs.get('description', None)
        self.parent_id = kwargs.get('parent_id', None)
        self.id = kwargs.get('id', None)
